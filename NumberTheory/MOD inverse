- MOD can be distributed with '+', '-', '*' but for '/' it can't , so  x/y = x*(1/y) and (1/y) % MOD = power(y,mod-2)%MOD but iff the mod 
is prime number so (x/y) % MOD = (x % MOD * power(y,mod-2) % MOD) % MOD.
------------------------------------------------------------------------------------------------------------------------------------------
- IF i want the value of (a^x) % m and x could be very large it can over flow with time here we use
 Little Fermat Theorem
 For a prime m and a!=0, a^(m-1) = 1  (mod m) and  a^x = a^(x%(m-1)) (mod m)
 ------------------------------------------------------------------------------------------------------------------------------------------
 Suppose i have a Number n = p1^a1 * p2^a2 * p3^a3 where p1,p2,p3 are distinct prime factors the number of divisors of n is 
d=(a1+1)*(a2+1)*(a3+1).
-------------------------------------------------------------------------------------------------------------------------------------------
Note: I can't make mod inverse with little fermat theorem bec the mod won't be prime.
-------------------------------------------------------------------------------------------------------------------------------------------
if i want a^-1 % m and m is not prime then power(a,m-2) won't work, if gcd(m,a)=1 then a^(phi(m)) = 1 (mod m)
multiply a^-1 both sides , a^(phi(m)-1) = a^-1  (mod m).
--------------------------------------------------------------------------------------------------------------------------------------
Getting a^(-h) (mod m) can be done by getting a^(-1) (mod m), 
inv[1]= a^-1 % m
for(int i=2;i<=h;i++)
 inv[i]=(inv[i-1]*inv[1])%m.
--------------------------------------------------------------------------------------------------------------------------------------
