/*
Problem: give a graph that has weighted nodes and require to get the indepentant set of nodes of max weight (note not nessary the max 
number of nodes and if you want the max number of nodes just put the weights with one), 
At general graph: it is NP-hard problem.
At trees : here is a solution complexity O(V*log(E)).
At bipartite graphs: Can be done with MaxFlow.
----------------------------------------------------------------------------------------------------------------------------------------
CODE For trees
--------------
const int N=100009;
int vis[N],w[N];
vector< vector<int> > v(N),vv(N);
void dfs(int no)
{
    vis[no]=1;
    for(int i=0;i<sz(v[no]);i++)
    {
        int nw=v[no][i];
        if(vis[nw])
            continue;
        vv[no].pb(nw);
        dfs(nw);
    }
}
int solve(int no,int taken)
{
    int ans=0;
    if(taken)
    {
        ans=w[no];
        for(int i=0;i<sz(vv[no]);i++)
        {
            int nw=vv[no][i];
            ans+=solve(nw,0);
        }
    }
    else
    {
        ans=0;
        for(int i=0;i<sz(vv[no]);i++)
        {
            int nw=vv[no][i];
            ans+=max(solve(nw,1),solve(nw,0));
        }
    }
    return ans;
}
int main()
{
    int n;
    cin>>n;
    for(int i=1;i<=n;i++)
        cin>>w[i];
    for(int i=0;i<n-1;i++)
    {
        int f,t;
        cin>>f>>t;
        v[f].pb(t);
        v[t].pb(f);
    }
    // just to get a directed version of the tree.
    dfs(1);

    int ans= max(solve(1,0),solve(1,1));
    cout<<ans<<endl;
}
----------------------------------------------------------------------------------------------------------------------------------------
For Bipartite Graph: If the graph G is a bipartite graph, we have to reduce MWIS problem22, into a Max Flow problem.
We assign the original vertex cost (the weight of taking that vertex) as capacity from source to that vertex for the left 
set of the bipartite graph and capacity from that vertex to sink for right set of the bipartite graph. Then, we give ‘inﬁnite’ 
capacity in between any edge in between the left and right sets. 
The MWIS of this bipartite graph is the weight of all vertex cost minus the max ﬂow value of this ﬂow graph.
----------------------------------------------------------------------------------------------------------------------------------------

























