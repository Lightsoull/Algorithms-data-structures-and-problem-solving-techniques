// the par array to store the path from node (node) to node (T) and the edge connecting them.
CODE
vector<int> get_path(int S,int T)
{
    while(T!=S)
    {
        path.pb(T);
        T=par[T].first;
    }
    path.pb(S);
    reverse(all(path));
    return path;
}
ll bfs(int node,int T)
{
    clr(vis,0);
    queue<pair<int,int>> q;
    q.push(mp(node,0));
    vis[node]=1;
    while(sz(q)>0)
    {
        int cur=q.front().first;
        int co=q.front().second;
        q.pop();
 
        if(cur==T)
        {
            return co;
        }
 
        for(int i=0;i<sz(v[cur]);i++)
        {
            int nw=v[cur][i].first;
            int edge_id=v[cur][i].second;
            if(vis[nw])
                continue;
            vis[nw]=1;
            
            par[nw]=mp(cur,se);
            q.push(mp(nw,co+1));
        }
    }
    return inf;
}
----------------------------------------------------------------------------------------------------------------------------------------

