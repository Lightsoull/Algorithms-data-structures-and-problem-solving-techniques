//#include "grader.h"
#include <bits/stdc++.h>
#define sz(v)   ((int)(v).size())
#define  all(v)    ((v).begin()),((v).end())
#define  allr(v)    ((v).rbegin()),((v).rend())
#define   pb         push_back
#define   mp         make_pair
#define   mt         make_tuple
//#define   Y            imag()
//#define   X            real()
#define    clr(v,d)      memset( v, d ,sizeof(v))
#define   angle(n)      atan2((n.imag()),(n.real()))
#define   vec(a,b)       ((b)-(a))
//#define   length(a)      hypot( (a.imag()),(a.real()) )
#define   normalize(a)      (a)/(length(a))
//#define    dp(a,b)          (((conj(a))*(b)).real())
//#define    cp(a,b)          (((conj(a))*(b)).imag())
#define    lengthsqrt(a)       dp(a,a)
#define    rotate0( a,ang)    ((a)*exp( point(0,ang) ))
#define    rotateA(about,p,ang)   (rotate0(vec(about,p),ang)+about)
#define    reflection0(m,v)         (conj((v)/(m))*(m))
#define     reflectionA(m,v,p0)     (conj( (vec(p0,v))/(vec(p0,m)) ) * (vec(p0,m)) ) + p0
//#define     same(p1,p2)               ( dp(  vec(p1,p2),vec(p1,p2)) < eps )
#define     PT                    complex<double>
#define outfile freopen("out.out", "w", stdout);
#define infile  freopen("in.in", "r", stdin);
#define PI acos(-1)
typedef  long long     ll ;
typedef  unsigned long long ull;
const double eps= (1e-9);
using namespace std;
int dcmp(long double a,long double b){   return fabsl(a-b)<=eps ? 0: (a>b)? 1:-1  ;}
int getBit(int num, int idx) {return ((num >> idx) & 1) == 1;}
int setBit1(int num, int idx) {return num | (1<<idx);}
ll setBit0(ll num, int idx) {return num & ~(1ll<<idx);}
ll flipBit(int num, int idx) {return num ^ (1<<idx);}
void FS(){ ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);}
const int N=200009;
vector< vector<int> > v(N);
vector<int> v1;
int z[12*N];
vector<int> text,pattern;
bool blk[12*N];
int calc(int a,int b,int n)
{
    if(a<=b)
    {
        return b-a;
    }
    else
    {
        return n-(a-b);
    }
}
void z_arr()
{
    int n=sz(text);
    int L,R;
    L=R=0;
    for(int i=1;i<n;i++)
    {
        if(i>R)
        {
            L=R=i;
            while(R<n&&text[R-L]==text[R])
                R++;
            z[i]=R-L;
            R--;
        }
        else
        {
            int k= i-L;
            if(z[k]<R-i+1)
                z[i]=z[k];
            else
            {
                L=i;
                while(R<n&&text[R-L]==text[R])
                    R++;
                z[i]=R-L;
                R--;
            }
        }
    }
}

bool check()
{
   int n=sz(text);
   int m=sz(pattern);
   z_arr();
   for(int i=1;i<n;i++)
   {
       if(z[i]==m&&blk[i]==0)
          return 1;
   }
   return 0;
}
int main()
{

    int m,n;
    scanf("%d %d",&n,&m);

    for(int i=0;i<m;i++)
    {
        int a,b;
        scanf("%d %d",&a,&b);
        int len1=calc(a,b,n);
        int len2=calc(b,a,n);
        v[a].pb(len1);
        v[b].pb(len2);
    }

    for(int i=1;i<=n;i++)
    {
        sort(all(v[i]));
    }
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<sz(v[i]);j++)
        {
            int no=v[i][j];
          //  cout<<no<<" ";
            v1.pb(no);
        }
      //  cout<<endl;
        v1.pb(-1);
    }

    pattern=v1;
    //cout<<sz(pattern)<<endl;
    int siz=sz(v1);
    for(int i=0;i<siz;i++)
        v1.pb(v1[i]);
    text=pattern;
    text.pb(-2);
    for(int i=0;i<sz(v1);i++)
       text.pb(v1[i]);
    blk[sz(pattern)+1]=1;
    blk[sz(pattern)+1+sz(pattern)]=1;
    int ret=check();

     //for(int i=0;i<sz(text);i++)
      //  cout<<text[i]<<" ";
   // cout<<z[33]<<endl;
    if(ret)
        printf("YES\n");
    else
        printf("NO\n");
}



















