-Meaning of slope: the slope from some point let it A means the ratio between the change in the Y-axis and X-axis during each point 
we move from A in a stright line.

-Calucalting slope: if i have a line and point A on the line and point B above point A in y-axis and point C below point A in y-axis
then the slope of point B with respect to point A is the same as the point C with respect to point A because
let A(x1,y1) B(x2,y2) C(x3,y3), A-B slope (y2-y1)/(x2-x1) and slope of B-C slope is the same but the nomerator * -1 and denmenator *-1
so the -1 will be cancelled and become the same value, but there is a special case at the horizonatal and vertical lines because the 
when the nomerator or denemenator is zero then the -1 won't be cancelled so you have to handel it.

- Slope of a line ab of two points a(x1,y1) and b(x2,y2) is (y2-y1)/(x2-x1) 
Take care of the horizonatal and vertical lines because the difference between Y-axis and X-axis can be zero.

- Different lines can have the same slope.

- if two lines are parallel then they have the same slope.
- if two lines are prependicular then if first have slope a/b second will have -b/a.

CODE
// i and j are indexes of points
pair<int,int> get_slope(int i,int j)
{
    if(x[j]-x[i]==0)
    {
        int g=__gcd(abs(x[j]-x[i]),abs(y[j]-y[i])),up,dw;
        up=abs(y[j]-y[i]);  dw=(x[j]-x[i]); up/=g; dw/=g;
        return mp(up,dw);
    }
    else if(y[j]-y[i]==0)
    {
        int g=__gcd(abs(x[j]-x[i]),abs(y[j]-y[i])),up,dw;
        up=(y[j]-y[i]); dw=abs(x[j]-x[i]); up/=g; dw/=g;
        return mp(up,dw);
    }
    else
    {
        int g=__gcd(abs(x[j]-x[i]),abs(y[j]-y[i])),up,dw;
        up=(y[j]-y[i]); dw=(x[j]-x[i]); up/=g; dw/=g;
        if(up<0&&dw<0)
        {
            up*=-1;
            dw*=-1;
        }
        else if(dw<0)
        {
            dw*=-1;
            up*=-1;
        }
        return mp(up,dw);
    }
}
----------------------------------------------------------------------------------------------------------------------------------------
- To distingue between 2 line segments they have to have the same slope but this condition is not enough as it might have the same
slope but they are parallel and not the same line segment but if it has the same slope and the same cutting point from the y-axis
then sure it is the same line in other words at that case they will have the same stright line equation so they are equal.

-Stright line equation
y= m*x + C, m is the slope between the two points representing the line, (x,y) are some point on the line, C is the point that the
line cut the y-axis at.

This equation can be transformed to 
C = y1-m*x1
m= (y2-y1)/(x2-x1)
C= y1-((y2-y1)/(x2-x1))*x1
y = m*x + C (multiply by (x2-x1) both sides)
(x2-x1)*y1= (y2-y1)*x1 + (x2-x1)*y1-(y2-y1)*x1 =
(a*x1 + b*y1 = C),
a= (y2-y1)
b= (x2-x1)
C= (y1*x2-y2*x1)
// take care calculate C after fixing a and b, handeling horizontal/vertical lines.
CODE
----
int x1 = x[i], y1 = y[i], x2 = x[j], y2 = y[j];
// construct a line passing through (x1, y1) and (x2, y2)
// line is expressed as equation ax - by = c with constant a, b, c 
int a = y1 - y2, b = x1 - x2;
// simplify equation
int d = gcd(a, b); a /= d, b /= d;
if (a < 0 || (a == 0 && b < 0))
{
	 a = -a;
     b = -b;
}
// lines with the same slope (same a, b) are stored in a map
pair<int,int> slope(a, b);
long long c = 1LL * a * x1 - 1LL * b * y1;

----------------------------------------------------------------------------------------------------------------------------------------



















